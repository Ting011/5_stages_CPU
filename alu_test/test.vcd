$date
	Sat Mar 18 03:54:01 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module test $end
$var wire 32 ! result [31:0] $end
$var wire 3 " flags [2:0] $end
$var reg 32 # instruction [31:0] $end
$var reg 32 $ regA [31:0] $end
$var reg 32 % regB [31:0] $end
$scope module u_add $end
$var wire 32 & instruction [31:0] $end
$var wire 32 ' regA [31:0] $end
$var wire 32 ( regB [31:0] $end
$var reg 3 ) flags [2:0] $end
$var reg 6 * func [5:0] $end
$var reg 16 + imm16 [15:0] $end
$var reg 6 , opcode [5:0] $end
$var reg 5 - rd [4:0] $end
$var reg 32 . result [31:0] $end
$var reg 5 / rs [4:0] $end
$var reg 5 0 rt [4:0] $end
$var reg 5 1 sa [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
b0 0
b0 /
bx .
b0 -
b0 ,
b0 +
b0 *
bx )
b0 (
b0 '
b0 &
b0 %
b0 $
b0 #
bx "
bx !
$end
#500000
b11 "
b11 )
b10000000000000000000000000000101 !
b10000000000000000000000000000101 .
b1 /
b100000 +
b100000 *
b110 %
b110 (
b1111111111111111111111111111111 $
b1111111111111111111111111111111 '
b1000000000000000100000 #
b1000000000000000100000 &
#600000
b0 "
b0 )
b11 !
b11 .
b1 0
b0 /
b10 %
b10 (
b1 $
b1 '
b10000000000100000 #
b10000000000100000 &
#700000
b11 "
b11 )
b10000000000000000000000000000000 !
b10000000000000000000000000000000 .
b100010 +
b100010 *
b11111111111111111111111111111111 %
b11111111111111111111111111111111 (
b1111111111111111111111111111111 $
b1111111111111111111111111111111 '
b10000000000100010 #
b10000000000100010 &
#800000
b0 "
b0 )
b1 !
b1 .
b11 %
b11 (
b100 $
b100 '
#900000
b10 "
b10 )
b10000000000000000000000000000101 !
b10000000000000000000000000000101 .
b0 0
b1 /
b100001 +
b100001 *
b110 %
b110 (
b1111111111111111111111111111111 $
b1111111111111111111111111111111 '
b1000000000000000100001 #
b1000000000000000100001 &
#1000000
b10 "
b10 )
b10000000000000000000000000000000 !
b10000000000000000000000000000000 .
b1 0
b0 /
b100011 +
b100011 *
b11111111111111111111111111111111 %
b11111111111111111111111111111111 (
b10000000000100011 #
b10000000000100011 &
#1100000
